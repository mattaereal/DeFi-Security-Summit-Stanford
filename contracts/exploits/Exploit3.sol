// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.14;

/*
 * Complete the contract below so that you can solve the challenge!
 * Note that you can (and may!) also modify the `deployExploits.js` file
 * and add the necessary calls to your exploit contract within the
 * `resolution.js` file.
 *
 * For this challenge, we already completed a tiny part of the
 * exploit contract for you! :)
 * 
 * Also, if you need to declare additional contracts as helpers,
 * feel free to do so!
 */

/*///////////////////////////////////////////////////////////////////
//                                                                 //
//                           DEPENDENCIES                          //
//                                                                 //
///////////////////////////////////////////////////////////////////*/

/*
 * To solve certain challenges, you will need some interfaces.
 * We kindly provide them below :)
 */

interface IERC20 {
    function approve(address spender, uint256 amount) external returns (bool);
    function balanceOf(address account) external view returns (uint256);
    function transfer(address to, uint256 amount) external returns (bool);
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) external returns (bool);
}

interface BorrowSystemInsecureOracle {
    function depositToken1(uint256 amount) external;
    function borrowToken0(uint256 amount) external;
}

interface InsecureDexLP {
    function addLiquidity(uint256 amount0, uint256 amount1) external;
    function balanceOf(address user) external view returns(uint256);
    function removeLiquidity(
        uint256 amount
    ) external returns(uint amount0, uint amount1);
    function swap(
        address tokenFrom,
        address tokenTo,
        uint256 amountIn
    ) external returns(uint256 amountOut);
    function token0() external returns(IERC20);
    function token1() external returns(IERC20);
}


/*///////////////////////////////////////////////////////////////////
//                                                                 //
//                        EXPLOIT CONTRACTS                        //
//                                                                 //
///////////////////////////////////////////////////////////////////*/

contract Exploit3 {

    /*
     * HINT:
     * You will most likely use these things here ;)
     */
    IERC20 token0;
    IERC20 token1;
    BorrowSystemInsecureOracle borrowSystem;
    InsecureDexLP dex;

    // Complete this contract!
}